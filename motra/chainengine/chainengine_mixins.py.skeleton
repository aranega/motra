"""Mixins to be implemented by user."""


class ChainMixin:
    """User defined mixin class for Chain."""

    def __init__(self, *, name=None, operations=None, **kwargs):
        super().__init__()

    def run(self, input=None):

        raise NotImplementedError('operation run(...) not yet implemented')


class OperationMixin:
    """User defined mixin class for Operation."""

    def __init__(self, *, chain=None, **kwargs):
        super().__init__()

    def execute(self, model=None):

        raise NotImplementedError('operation execute(...) not yet implemented')


class SerializationFormatMixin:
    """User defined mixin class for SerializationFormat."""

    def __init__(self, *, name=None, saves=None, **kwargs):
        super().__init__()


class TransformationMixin:
    """User defined mixin class for Transformation."""

    def __init__(self, *, implementation=None, **kwargs):
        super().__init__(**kwargs)


class InteractiveMixin:
    """User defined mixin class for Interactive."""

    def __init__(self, **kwargs):
        super().__init__(**kwargs)


class IOMixin:
    """User defined mixin class for IO."""

    def __init__(self, *, path=None, **kwargs):
        super().__init__(**kwargs)


class OperationExtensionMixin:
    """User defined mixin class for OperationExtension."""

    def __init__(self, **kwargs):
        super().__init__(**kwargs)


class SaveMixin:
    """User defined mixin class for Save."""

    def __init__(self, *, serializationformat=None, **kwargs):
        super().__init__(**kwargs)


class M2MMixin:
    """User defined mixin class for M2M."""

    def __init__(self, **kwargs):
        super().__init__(**kwargs)


class M2TMixin:
    """User defined mixin class for M2T."""

    def __init__(self, **kwargs):
        super().__init__(**kwargs)


class LoadMixin:
    """User defined mixin class for Load."""

    def __init__(self, **kwargs):
        super().__init__(**kwargs)
